---
# L3LS Fabric Values - update these values with caution,
# SOME CHANGES COULD BE DISRUPTIVE.

fabric_name: DUAL_DC_FABRIC

# Enable vlan aware bundles
evpn_vlan_aware_bundles: true

# Select rfc5549 or ospf, not both
underlay_routing_protocol: ebgp
# underlay_ipv6: true
# underlay_rfc5549: true
# overlay_mlag_rfc5549: true

# overlay_routing_protocol: ebgp

# Optional, enable multicast features
# underlay_multicast: true
# evpn_multicast: true

#
# L3 Edge port definitions. This can be any port in the entire Fabric, where IP interfaces are defined.
l3_edge:
  # Define a new IP pool that will be used to assign IP addresses to L3 Edge interfaces.
  p2p_links_ip_pools:
    - name: DCI_IP_pool
      ipv4_pool: 172.100.100.0/24
  # Define a new link profile which will match the IP pool, the used ASNs and include the defined interface into underlay routing
  p2p_links_profiles:
    - name: DCI_profile
      ip_pool: DCI_IP_pool
      as: [65103, 65203]
      include_in_underlay_protocol: true
  # Define each P2P L3 link and link the nodes, the interfaces and the profile used.
  p2p_links:
    - id: 1
      nodes: [dc1-leaf3, dc2-leaf3]
      interfaces: [Ethernet3, Ethernet3]
      profile: DCI_profile
    - id: 2
      nodes: [dc1-leaf3, dc2-leaf3]
      interfaces: [Ethernet4, Ethernet4]
      profile: DCI_profile

# Fabric-wide configuration options
local_users:
  - name: admin
    privilege: 15
    role: network-admin
    sha512_password: $6$98.Ur9uFQfRcP2kv$XPWif8J2hRH36Q29peAJzBXoNryt2.oxq2aX94kAu8LlwV0ctzTlX38Y38xhkBGESK6uJSxVQ0HYoIrz4p3XA.

ip_name_servers:
  - ip_address: 8.8.8.8

ntp:
  servers:
    - name: pool.ntp.org

# BGP global options
bgp_peer_groups:
  ipv4_underlay_peers:
    password: "AQQvKeimxJu+uGQ/yYvv9w=="
  evpn_overlay_peers:
    password: "q+VNViP5i4rVjW1cxFv2wA=="
  mlag_ipv4_underlay_peer:
    password: "vnEaG8gMeQf3d3cN6PktXQ=="

bgp_graceful_restart:
  enabled: true
  restart_time: 300

bgp_distance:
  external_routes: 20
  internal_routes: 200
  local_routes: 200

# OOB Management network options
mgmt_gateway: 172.20.20.1
# If lab is running cEOS, management interface is Management0
# If lab is running vEOS, management interface is Management1
mgmt_interface: Management1
mgmt_interface_vrf: default

# Update p2p_uplinks_mtu 9214 -> 1500, MTU 9214 is not supported in vEOS-LAB on some hypervisors.
p2p_uplinks_mtu: 1500

# Adjust default bfd values, to avoid high CPU.
bfd_multihop:
  interval: 1200
  min_rx: 1200
  multiplier: 3

#eos_cli: |
#  router isis EVPN_UNDERLAY
#    spf-interval 1 10 100

## Options for the eos_snapshot and eos_validate_state module
root_dir: '{{ inventory_dir }}'

snapshots_backup_dir_name: 'snapshots'
snapshots_backup_dir: '{{ root_dir }}/{{ snapshots_backup_dir_name }}'

# list of desired formats. Supported values are markdown, json and text.
# text: one file per device and show command
# markdown: one report per device
# json: one report per fabric
# yaml: one report per fabric
output_format:
  - text
  - markdown
  # - json
  # - yaml

commands_list:
  - show lldp neighbors
  - show ip interface brief
  - show interfaces description
  - show version
  - show running-config

# AVD configurations output
# Main output directory
output_dir_name: "intended"
output_dir: "{{ root_dir }}/{{ output_dir_name }}"

# Output for test catalog YAML files if save_catalog is set to true
test_catalogs_dir_name: "test_catalogs"
test_catalogs_dir: "{{ output_dir }}/{{ test_catalogs_dir_name }}"

# Output directory for eos_validate_state reports
eos_validate_state_name: "reports"
eos_validate_state_dir: "{{ root_dir }}/{{ eos_validate_state_name }}"

# Output for test results JSON files if save_results is set to true
test_results_dir_name: "test_results"
test_results_dir: "{{ eos_validate_state_dir }}/{{ test_results_dir_name }}"

# Fabric name used in the reports name
fabric_name: "all"

# Reports name
eos_validate_state_md_report_path: "{{ eos_validate_state_dir }}/{{ fabric_name }}-state.md"
eos_validate_state_csv_report_path: "{{ eos_validate_state_dir }}/{{ fabric_name }}-state.csv"

# Allow different manufacturers
accepted_xcvr_manufacturers: "{{ validation_role.xcvr_own_manufacturers | arista.avd.default(['Arastra, Inc.', 'Arista Networks']) }}"

# Allow different states for power supplies
accepted_pwr_supply_states: "{{ validation_role.pwr_supply_states | arista.avd.default(['ok']) }}"

# Allow different states for fans
accepted_fan_states: "{{ validation_role.fan_states | arista.avd.default(['ok']) }}"

# Generate CSV results file
validation_report_csv: "{{ validation_role.validation_report_csv | arista.avd.default(true) }}"

# Generate MD results file
validation_report_md: "{{ validation_role.validation_report_md | arista.avd.default(true) }}"

# Print only FAILED tests
only_failed_tests: "{{ validation_role.only_failed_tests | arista.avd.default(false) }}"


# Variable to enable ANTA eos_validate_state
# Defaults to false as ANTA is currently in preview
use_anta: true

# Save each device test catalog to 'test_catalogs_dir'. Defaults to false.
save_catalog: true

# Logging level for the ANTA libraries. Defaults to "WARNING".
logging_level: "WARNING"

# The variable `skipped_tests` can be used for running/skipping test categories
skipped_tests:
#  - category: AvdTestBGP
  - category: AvdTestHardware
    tests:
      - VerifyEnvironmentCooling
